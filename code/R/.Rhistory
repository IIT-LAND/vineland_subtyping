'time')
var2use = c('mullen_VR_AgeEq','mullen_FM_AgeEq','mullen_RL_AgeEq','mullen_EL_AgeEq')
# correct some "0"
data[data == 0] <- NA                           # Replace 0 with NA
#  # INPUT ARGUMENTS
# df = data frame to process
# x_var = string denoting variable to plot on x-axis
# y_var = string denoting variable to plot on y-axis
# subgrp_var = string denoting variable that has subgroup labels
# xLabel = label to put on x-axis
# yLabel = label to put on y-axis
# fname2save = file path and filename if you want to save plot
# plot_dots = set to TRUE to plot individual dots
# plot_lines = set to TRUE to plot individual lines
# ci_band = set to true if you want to plot confidence bands
# pi_band = set to true if you want to plot prediction bands
# dot_alpha = alpha setting for plotting dots
# line_alpha = alpha setting for plotting lines
# band_alpha = alpha setting for plotting bands
# xLimits = set limits on x-axis
# yLimits = set limits on y-axis
# standardize = set to TRUE if you want to z-score data before modeling
data2use = data[data$cluster=="high" | data$cluster=="med" |data$cluster=="low"|data$cluster=="TD",]
data2use$cluster <- factor( data2use$cluster,levels = c("high","med","low","TD"));
for (i in 1:length(var2use)) {
col2use =var2use[i]
#plot line
spagh = spaghettiPlot(df=data2use,
x_var='mullen_ageMo',
y_var=col2use,
subgrp_var='cluster',
xLabel = 'age',
yLabel =col2use,
modelType = "linear",
fname2save = NULL, plot_dots = TRUE, plot_lines = TRUE,
ci_band = TRUE, pi_band = FALSE, dot_alpha = 1/10, line_alpha = 1/1,
band_alpha = 1/2, xLimits = c(0, 60), yLimits = c(0,90), standardize = FALSE,
color = c("#FF9933","#3399CC","#009900","#CC0099")) # ask mike standardized
print(spagh$p)
print(spagh$p1)
print(col2use)
## linear mixed effect model
## use the same parameters that Mike used to preapare the plot --> to be consistent! I do not have to change them as i whish!!   otherwise  I will get non consistent results
data2stat = data[data$cluster=="high" | data$cluster=="med" |data$cluster=="low",]
data2stat$cluster <- factor( data2stat$cluster,levels = c("high","med","low"));
x_var='mullen_ageMo'
y_var=col2use
subgrp_var = 'cluster'
fx_form = as.formula(sprintf("%s ~ %s*%s", y_var, x_var, subgrp_var)) # fixed effect
rx_form = as.formula(sprintf("~ %s|subjectId",x_var))                 # random effect
ctrl <- lmeControl(opt='optim', msMaxIter = 500)
ml_method = "ML"
m_allgrps <- eval(substitute(lme(fixed = fx_form, random = rx_form, data = data2stat,
na.action = na.omit, control=ctrl, method = ml_method), list(fx_form = fx_form, rx_form = rx_form)))
print(summary(m_allgrps))
print(anova(m_allgrps))
# pairwise t-test
#print(pairwise.t.test(data2use[,col2use],data2use[,'cluster'] , p.adj = "bonf"))
}
#load data
data <- read.csv(file.path(uscd_data_path,'ucsd_long_allSubj_clusters.csv'))
#colnames(data)
p = ggplot(data=subset(data,data$time==1),aes(x = cluster,y = vine_agemo))
p = p + geom_jitter() + geom_boxplot(fill = NA, colour = "#000000", outlier.shape = NA)+ylim(0,100)
p
table(data$cluster,data$recentDxJ_dxCode) #print in the consol
# prepare data
# column with subject_id should be called subjectId
colnames(data)[which(names(data) == "subjectid")] <- "subjectId"
# selct only subjects that have a cluster/dignosis (exclude those ASD with t1>72, or that do not have longitudinal data)
data$cluster[data$cluster==''] <- NA
data = data[!is.na(data$cluster),]
# rename row
row.names(data) <- NULL
#age should be round
data$vine_agemo = round(data$vine_agemo)
data$mullen_ageMo = round(data$mullen_ageMo)
#cluster calumn should be a factor
# remane in a more comprehansible format
# for domain
for (i in (1:length(data$cluster))) {
if (data[i, 'cluster'] == '2.0'){
data[i,'cluster'] = "high"
}
else if (data[i, 'cluster'] == '1.0'){
data[i,'cluster'] = "med"
}
else if (data[i, 'cluster'] == '3.0'){
data[i,'cluster'] = "low"
}
}
data$cluster <- as.factor(data$cluster)
all_var_list= c(
'vine_ComRecep_Raw',
'vine_ComRecep_Adap',
'vine_ComRecep_AgeEq_mo',
'vine_ComExprv_Raw',
'vine_ComExprv_Adap',
'vine_ComExprv_AgeEq_mo',
'vine_ComWritn_Raw',
'vine_ComWritn_Adap',
'vine_ComWritn_AgeEq_mo',
'vine_ComTotal_DomStd',
'vine_ComTotal_Adap',
'vine_DlyPers_Raw',
'vine_DlyPers_Adap',
'vine_DlyPers_AgeEq_mo',
'vine_DlyDmstc_Raw',
'vine_DlyDmstc_Adap',
'vine_DlyDmstc_AgeEq_mo',
'vine_DlyCmty_Raw',
'vine_DlyCmty_Adap',
'vine_DlyCmty_AgeEq_mo',
'vine_DlyTotal_DomStd',
'vine_DlyTotal_Adap',
'vine_SocIntPers_Raw',
'vine_SocIntPers_Adap',
'vine_SocIntPers_AgeEq_mo',
'vine_SocLeisr_Raw',
'vine_SocLeisr_Adap',
'vine_SocLeisr_AgeEq_mo',
'vine_SocCope_Raw',
'vine_SocCope_Adap',
'vine_SocCope_AgeEq_mo',
'vine_SocTotal_DomStd',
'vine_SocTotal_Adap',
'vine_MtrGross_Raw',
'vine_MtrGross_Adap',
'vine_MtrGross_AgeEq_mo',
'vine_MtrFine_Raw',
'vine_MtrFine_Adap',
'vine_MtrFine_AgeEq_mo',
'vine_MtrTotal_DomStd',
'vine_MtrTotal_Adap',
'vine_DomStdTotal',
'vine_AdapBehav_DomStd',
'ados_ados_subjectid',
'ados_ageMo',
'ados_FMID',
'ados_Module',
'ados_CoSoTot',
'ados_RRTot',
'ados_CoSoTotRRTot',
'mullen_subjectid',
'mullen_p2f2',
'mullen_ageMo',
'mullen_VRT',
'mullen_VR_Raw',
'mullen_VR_AgeEq',
'mullen_FMT',
'mullen_FM_Raw',
'mullen_FM_AgeEq',
'mullen_RLT',
'mullen_RL_Raw',
'mullen_RL_AgeEq',
'mullen_ELT',
'mullen_EL_Raw',
'mullen_EL_AgeEq',
'mullen_ELC_Std',
'time')
var2use = c('mullen_VR_AgeEq','mullen_FM_AgeEq','mullen_RL_AgeEq','mullen_EL_AgeEq')
# correct some "0"
data[data == 0] <- NA                           # Replace 0 with NA
#  # INPUT ARGUMENTS
# df = data frame to process
# x_var = string denoting variable to plot on x-axis
# y_var = string denoting variable to plot on y-axis
# subgrp_var = string denoting variable that has subgroup labels
# xLabel = label to put on x-axis
# yLabel = label to put on y-axis
# fname2save = file path and filename if you want to save plot
# plot_dots = set to TRUE to plot individual dots
# plot_lines = set to TRUE to plot individual lines
# ci_band = set to true if you want to plot confidence bands
# pi_band = set to true if you want to plot prediction bands
# dot_alpha = alpha setting for plotting dots
# line_alpha = alpha setting for plotting lines
# band_alpha = alpha setting for plotting bands
# xLimits = set limits on x-axis
# yLimits = set limits on y-axis
# standardize = set to TRUE if you want to z-score data before modeling
data2use = data[data$cluster=="high" | data$cluster=="med" |data$cluster=="low"|data$cluster=="TD",]
data2use$cluster <- factor( data2use$cluster,levels = c("high","med","low","TD"));
for (i in 1:length(var2use)) {
col2use =var2use[i]
#plot line
spagh = spaghettiPlot(df=data2use,
x_var='mullen_ageMo',
y_var=col2use,
subgrp_var='cluster',
xLabel = 'age',
yLabel =col2use,
modelType = "linear",
fname2save = NULL, plot_dots = TRUE, plot_lines = TRUE,
ci_band = TRUE, pi_band = FALSE, dot_alpha = 1/10, line_alpha = 1/1,
band_alpha = 1/2, xLimits = c(0, 60), yLimits = c(0,90), standardize = FALSE,
color = c("#FF9933","#3399CC","#009900","#CC0099")) # ask mike standardized
print(spagh$p)
print(spagh$p1)
print(col2use)
## linear mixed effect model
## use the same parameters that Mike used to preapare the plot --> to be consistent! I do not have to change them as i whish!!   otherwise  I will get non consistent results
data2stat = data[data$cluster=="high" | data$cluster=="med" |data$cluster=="low",]
data2stat$cluster <- factor( data2stat$cluster,levels = c("high","med","low"));
x_var='mullen_ageMo'
y_var=col2use
subgrp_var = 'cluster'
fx_form = as.formula(sprintf("%s ~ %s*%s", y_var, x_var, subgrp_var)) # fixed effect
rx_form = as.formula(sprintf("~ %s|subjectId",x_var))                 # random effect
ctrl <- lmeControl(opt='optim', msMaxIter = 500)
ml_method = "ML"
m_allgrps <- eval(substitute(lme(fixed = fx_form, random = rx_form, data = data2stat,
na.action = na.omit, control=ctrl, method = ml_method), list(fx_form = fx_form, rx_form = rx_form)))
print(summary(m_allgrps))
print(anova(m_allgrps))
# pairwise t-test
#print(pairwise.t.test(data2use[,col2use],data2use[,'cluster'] , p.adj = "bonf"))
}
#are there any differencesc in AGE at T1
color = c("#FF9933","#3399CC","#009900","#CC0099")
data2plot = new_data[new_data$cluster=="high" | new_data$cluster=="med" |new_data$cluster=="low",]
#are there any differencesc in AGE at T1
color = c("#FF9933","#3399CC","#009900","#CC0099")
data2plot = new_data[new_data$cluster=="high" | new_data$cluster=="med" |new_data$cluster=="low",]
#how many subject in each cluster?
#take only T1
new_data = data[!duplicated(data$subjectId), ]
print('number of subjects in each cluster')
table(new_data$cluster)
#are there any differencesc in AGE at T1
color = c("#FF9933","#3399CC","#009900","#CC0099")
data2plot = new_data[new_data$cluster=="high" | new_data$cluster=="med" |new_data$cluster=="low",]
data2plot$cluster <- factor( data2plot$cluster,levels = c('high','med','low'));
p = ggplot(data =data2plot ,aes_string(x = 'cluster', y = 'vine_agemo', color='cluster') )
p = p + geom_jitter() + geom_boxplot(fill = NA, colour = "#000000", outlier.shape = NA)
p = p + scale_colour_manual(values = color)
p = p + guides(colour = FALSE)
p = p + scale_colour_manual(values = color)
p = p + xlab("ASD VABS-cluster") + ylab('age')
p = p + ggtitle('age at T1')
p = p + theme_bw()
p = p + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
p = p + theme(axis.text.x = element_text(face="bold", size=10))
p = p + theme(axis.text.y = element_text(face="bold", size=10))
p = p + scale_y_continuous( limits=c(0, 72))
print(p)
table(new_data[new_data$cluster=="high"|new_data$cluster=="med"|new_data$cluster=="low",'gender'])
asd_only = new_data[new_data$cluster=="high"|new_data$cluster=="med"|new_data$cluster=="low",]
asd_only$cluster <- factor( asd_only$cluster,levels = c('high','med','low'));
asd_only$gender <- factor( asd_only$gender,levels = c('F','M'));
table(asd_only$cluster,asd_only$gender)
pp <- ggplot(data=asd_only, aes(x=gender)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
age =ggplot(na.omit(subset(asd_only, select = c(gender,cluster))), aes(x= gender,  group=cluster)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",fill = "gender") +
facet_grid(~cluster) +
scale_y_continuous(labels = scales::percent)+ ylim(0,0.87)
age = age + ggtitle('UCSD VABS-cluster')
age = age  + theme_bw()
age = age  + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
age = age  + theme(axis.text.x = element_text(face="bold", size=10))
age = age  + theme(axis.text.y = element_text(face="bold", size=10))
age
lay =rbind(c(1,1,2,2,2,2)
)
#pdf(paste(plot_path,'/allheat.pdf', sep=""))
new_grid = grid.arrange(
p,age,
layout_matrix = lay)
library(gridExtra)
#pdf(paste(plot_path,'/allheat.pdf', sep=""))
new_grid = grid.arrange(
p,age,
layout_matrix = lay)
View(new_data)
#are there any differencesc in AGE at T1
color = c("#FF9933","#3399CC","#009900","#CC0099")
data2plot = new_data[new_data$cluster=="high" | new_data$cluster=="med" |new_data$cluster=="low",]
data2plot$cluster <- factor( data2plot$cluster,levels = c('high','med','low'));
p = ggplot(data =data2plot ,aes_string(x = 'cluster', y = 'vine_agemo', color='cluster') )
p = p + geom_jitter() + geom_boxplot(fill = NA, colour = "#000000", outlier.shape = NA)
p = p + scale_colour_manual(values = color)
p = p + guides(colour = FALSE)
p = p + scale_colour_manual(values = color)
p = p + xlab("") + ylab('months')
p = p + ggtitle('age at T1')
p = p + theme_bw()
p = p + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
p = p + theme(axis.text.x = element_text(face="bold", size=10))
p = p + theme(axis.text.y = element_text(face="bold", size=10))
p = p + scale_y_continuous( limits=c(0, 72))
print(p)
#pp <- ggplot(data=asd_only, aes(x=gender)) +
#      geom_bar(aes(y = (..count..)/sum(..count..)))
age =ggplot(na.omit(subset(asd_only, select = c(gender,cluster))), aes(x= gender,  group=cluster)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",fill = "") +
facet_grid(~cluster) +
scale_y_continuous(labels = scales::percent)+ ylim(0,0.87)
age = age + ggtitle('UCSD VABS-cluster')
age = age  + theme_bw()
age = age  + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
age = age  + theme(axis.text.x = element_text(face="bold", size=10))
age = age  + theme(axis.text.y = element_text(face="bold", size=10))
age
lay =rbind(c(1,1,2,2,2,2)
)
library(gridExtra)
#pdf(paste(plot_path,'/allheat.pdf', sep=""))
new_grid = grid.arrange(
p,age,
layout_matrix = lay)
#are there any differencesc in AGE at T1
color = c("#FF9933","#3399CC","#009900","#CC0099")
data2plot = new_data[new_data$cluster=="high" | new_data$cluster=="med" |new_data$cluster=="low",]
data2plot$cluster <- factor( data2plot$cluster,levels = c('high','med','low'));
p = ggplot(data =data2plot ,aes_string(x = 'cluster', y = 'vine_agemo', color='cluster') )
p = p + geom_jitter() + geom_boxplot(fill = NA, colour = "#000000", outlier.shape = NA)
p = p + scale_colour_manual(values = color)
p = p + guides(colour = FALSE)
p = p + scale_colour_manual(values = color)
p = p + xlab("") + ylab('months')
p = p + ggtitle('age at T1')
p = p + theme_bw()
p = p + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
p = p + theme(axis.text.x = element_text(face="bold", size=10))
p = p + theme(axis.text.y = element_text(face="bold", size=10))
p = p + scale_y_continuous( limits=c(0, 72))
print(p)
#pp <- ggplot(data=asd_only, aes(x=gender)) +
#      geom_bar(aes(y = (..count..)/sum(..count..)))
age =ggplot(na.omit(subset(asd_only, select = c(gender,cluster))), aes(x= gender,  group=cluster)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",fill = "") +
facet_grid(~cluster) +
scale_y_continuous(labels = scales::percent)+ ylim(0,0.87)
age = age + ggtitle('Gender distribution')
age = age  + theme_bw()
age = age  + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
age = age  + theme(axis.text.x = element_text(face="bold", size=10))
age = age  + theme(axis.text.y = element_text(face="bold", size=10))
age
lay =rbind(c(1,1,2,2,2,2)
)
library(gridExtra)
#pdf(paste(plot_path,'/allheat.pdf', sep=""))
new_grid = grid.arrange(
p,age,
layout_matrix = lay)
work_dir = '/Users/vmandelli/OneDrive - Fondazione Istituto Italiano Tecnologia/vineland_strat'
plot_path = file.path(work_dir,'plots')
data_path = file.path(work_dir,'results','vero_results')
code_path = file.path(work_dir,'code','R')
# Post-hoc analysis are usually done on test set only
datafile = 'imputed_data_P1_ts.csv'
data <- read.csv(file.path(data_path,datafile))
source(file.path(code_path,"cohens_d.R"))
db_type =  "ts"
# rename the clusters based on levels
# cluster_domain numeric 1-3  2= high 3= low 1 = med
# cluster_subdomain numberic 1-2
# for domain
for (i in (1:length(data$cluster_domain))) {
if (data[i, 'cluster_domain'] == '2'){
data[i,'clust_dom'] = "high"
}
else if (data[i, 'cluster_domain'] == '1'){
data[i,'clust_dom'] = "med"
}
else if (data[i, 'cluster_domain'] == '3'){
data[i,'clust_dom'] = "low"
}
}
# for subdomain
# for (i in (1:344)) {
#    if (data[i, 'cluster_subdomain'] == '1'){
#      data[i,'clust_subdom'] = "1"
#    }
#    else if (data[i, 'cluster_subdomain'] == '2'){
#      data[i,'clust_subdom'] = "2"
#    }
#  }
#are there any differencesc in AGE at T1
#black
#color = c("#000000","#666666","#CCCCCC")
#purple
color = c("#FF9933","#3399CC","#009900")
### old color "#FF6666","#99CC66","#99FFFF","#E7E1Ef")
data2plot = data
data2plot$clust_dom <- factor( data2plot$clust_dom,levels = c('high','med','low'));
data2plot$sex <- factor( data2plot$sex,levels = c("F","M"))
p = ggplot(data =data2plot ,aes_string(x = 'clust_dom', y ='interview_age', color='clust_dom') )
p = p + geom_jitter() + geom_boxplot(fill = NA, colour = "#000000", outlier.shape = NA)
p = p + scale_colour_manual(values = color)
p = p + guides(colour = FALSE)
p = p + scale_colour_manual(values = color)
p = p + xlab("") + ylab('months')
p = p + ggtitle('age')
p = p + theme_bw()
p = p + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
p = p + theme(axis.text.x = element_text(face="bold", size=10))
p = p + theme(axis.text.y = element_text(face="bold", size=10))
p = p + scale_y_continuous( limits=c(0, 72))
print(p)
ggsave(paste(plot_path,'/NDAR',db_type,'_ageT1.pdf', sep=""))
sex =ggplot(na.omit(subset(data2plot, select = c(sex,clust_dom))), aes(x= sex,  group=clust_dom)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",fill = "gender") +
facet_grid(~clust_dom) +
scale_y_continuous(labels = scales::percent)+ ylim(0,0.87)
#sex = sex + ggtitle(paste("NDAR_",db_type,"VABS-cluster",sep=''))
sex = sex + ggtitle('Gender distribution')
sex = sex  + theme_bw()
sex = sex  + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
sex = sex  + theme(axis.text.x = element_text(face="bold", size=10))
sex = sex  + theme(axis.text.y = element_text(face="bold", size=10))
sex
ggsave(paste(plot_path,'/NDAR',db_type,'_sex.pdf', sep=""))
lay =rbind(c(1,1,2,2,2,2)
)
#pdf(paste(plot_path,'/allheat.pdf', sep=""))
new_grid = grid.arrange(
p,sex,
layout_matrix = lay)
#dev.off()
work_dir = '/Users/vmandelli/OneDrive - Fondazione Istituto Italiano Tecnologia/vineland_strat'
plot_path = file.path(work_dir,'plots')
data_path = file.path(work_dir,'results','vero_results')
code_path = file.path(work_dir,'code','R')
# Post-hoc analysis are usually done on test set only
datafile = 'imputed_data_P1_tr.csv'
data <- read.csv(file.path(data_path,datafile))
source(file.path(code_path,"cohens_d.R"))
db_type =  "tr"
# rename the clusters based on levels
# cluster_domain numeric 1-3  2= high 3= low 1 = med
# cluster_subdomain numberic 1-2
# for domain
for (i in (1:length(data$cluster_domain))) {
if (data[i, 'cluster_domain'] == '2'){
data[i,'clust_dom'] = "high"
}
else if (data[i, 'cluster_domain'] == '1'){
data[i,'clust_dom'] = "med"
}
else if (data[i, 'cluster_domain'] == '3'){
data[i,'clust_dom'] = "low"
}
}
# for subdomain
# for (i in (1:344)) {
#    if (data[i, 'cluster_subdomain'] == '1'){
#      data[i,'clust_subdom'] = "1"
#    }
#    else if (data[i, 'cluster_subdomain'] == '2'){
#      data[i,'clust_subdom'] = "2"
#    }
#  }
#are there any differencesc in AGE at T1
#black
#color = c("#000000","#666666","#CCCCCC")
#purple
color = c("#FF9933","#3399CC","#009900")
### old color "#FF6666","#99CC66","#99FFFF","#E7E1Ef")
data2plot = data
data2plot$clust_dom <- factor( data2plot$clust_dom,levels = c('high','med','low'));
data2plot$sex <- factor( data2plot$sex,levels = c("F","M"))
p = ggplot(data =data2plot ,aes_string(x = 'clust_dom', y ='interview_age', color='clust_dom') )
p = p + geom_jitter() + geom_boxplot(fill = NA, colour = "#000000", outlier.shape = NA)
p = p + scale_colour_manual(values = color)
p = p + guides(colour = FALSE)
p = p + scale_colour_manual(values = color)
p = p + xlab("") + ylab('months')
p = p + ggtitle('age')
p = p + theme_bw()
p = p + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
p = p + theme(axis.text.x = element_text(face="bold", size=10))
p = p + theme(axis.text.y = element_text(face="bold", size=10))
p = p + scale_y_continuous( limits=c(0, 72))
print(p)
ggsave(paste(plot_path,'/NDAR',db_type,'_ageT1.pdf', sep=""))
sex =ggplot(na.omit(subset(data2plot, select = c(sex,clust_dom))), aes(x= sex,  group=clust_dom)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",fill = "gender") +
facet_grid(~clust_dom) +
scale_y_continuous(labels = scales::percent)+ ylim(0,0.87)
#sex = sex + ggtitle(paste("NDAR_",db_type,"VABS-cluster",sep=''))
sex = sex + ggtitle('Gender distribution')
sex = sex  + theme_bw()
sex = sex  + theme(plot.title = element_text(size = 10, face = "bold",hjust = 0.5))
sex = sex  + theme(axis.text.x = element_text(face="bold", size=10))
sex = sex  + theme(axis.text.y = element_text(face="bold", size=10))
sex
ggsave(paste(plot_path,'/NDAR',db_type,'_sex.pdf', sep=""))
lay =rbind(c(1,1,2,2,2,2)
)
#pdf(paste(plot_path,'/allheat.pdf', sep=""))
new_grid = grid.arrange(
p,sex,
layout_matrix = lay)
#dev.off()
